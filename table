-- Your SQL goes here
-- Your SQL goes here
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE TYPE resource_type_enum AS ENUM ('Product', 'Resource', 'Asset');
CREATE TYPE action_type_enum AS ENUM ('Cite', 'Produce', 'Consume', 'Transfer', 'Use', 'Load', 'Unload');
CREATE TYPE role_enum AS ENUM ('Input', 'Output');
CREATE TYPE commitment_status_enum AS ENUM ('Fulfilled', 'Output');
CREATE TYPE field_type_enum AS ENUM ('Text', 'Date', 'Number')
CREATE TYPE event_type_enum AS ENUM ('EconomicEvent')

--Company Table
CREATE TABLE IF NOT EXISTS agents (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name TEXT NOT NULL,
    note TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

--Products Specification Table
CREATE TABLE IF NOT EXISTS resource_specifications (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    agent_id UUID NOT NULL REFERENCES agents(id),
    name TEXT NOT NULL,
    note TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    resource_type resource_type_enum NOT NULL,
    unit_of_measure TEXT NOT NULL
);

--Products Table
CREATE TABLE IF NOT EXISTS economic_resources (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    resource_specification_id UUID NOT NULL REFERENCES resource_specifications(id),
    name TEXT NOT NULL,
    note TEXT,
    accounting_quantity INTEGER NOT NULL,
    on_hand_quantity INTEGER NOT NULL,
    tracking_identifier TEXT,
    current_location TEXT NOT NULL,
    lot TEXT,
    contained_in UUID REFERENCES economic_resources(id),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    reference_number SERIAL
);


--Recipe Process Map Table
CREATE TABLE IF NOT EXISTS recipes (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    agent_id UUID NOT NULL REFERENCES agents(id),
    name TEXT NOT NULL,
    note TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

--Recipe Process Map Resources Table
CREATE TABLE IF NOT EXISTS recipe_resources (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    recipe_id UUID NOT NULL REFERENCES recipes(id),
    resource_specification_id NOT NULL UUID REFERENCES resource_specifications(id)
);

--Recipe Process Table
CREATE TABLE IF NOT EXISTS processes (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    recipe_id UUID NOT NULL REFERENCES recipes(id),
    name TEXT NOT NULL,
    note TEXT,
    output_of UUID REFERENCES processes(id),
    template_id UUID NOT NULL REFERENCES templates(id)
);

--Recipe Process Events
CREATE TABLE IF NOT EXISTS recipe_events (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    process_id UUID REFERENCES processes(id),
    action action_type_enum NOT NULL,
    role role_enum NOT NULL,
    resource_specification_id UUID REFERENCES resource_specifications(id),
    economic_resource_id UUID REFERENCES economic_resources(id),
    note TEXT,
    is_commitment BOOLEAN,
    commitment_status TEXT,
    triggers_commitment BOOLEAN,
    fulfills_commitment_id UUID REFERENCES recipe_events(id),
    location TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


--Process Execution
CREATE TABLE IF NOT EXISTS economic_events (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    recipe_event_id UUID REFERENCES recipe_events(id),
    provider_id UUID REFERENCES agents(id),
    receiver_id UUID REFERENCES agents(id),
    note TEXT,
    resource_specification_id UUID REFERENCES resource_specifications(id),
    resource_inventoried_as UUID REFERENCES economic_resources(id),
    resource_quantity INTEGER NOT NULL,
    to_resource_specification_id UUID REFERENCES resource_specifications(id),
    to_unit_of_measure TEXT,
    has_point_in_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

--Form Templates
CREATE TABLE IF NOT EXISTS templates {
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name TEXT NOT NULL
}

--DataEvents 
CREATE TABLE IF NOT EXISTS data_events (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    template_id NOT NULL REFERENCES templates(id)
    event_type event_type_enum NOT NULL,
    role role_enum NOT NULL,
    action action_type_enum NOT NULL
);

--DataFields 
CREATE TABLE IF NOT EXISTS data_fields (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    data_event_id UUID NOT NULL REFERENCES data_events(id)
    field TEXT NOT NULL,
    field_type field_type_enum NOT NULL,
    note TEXT,
    field_required BOOLEAN NOT NULL,
    field_regulation_required BOOLEAN NOT NULL,
    field_default_value TEXT
);